# My-Nodesite Configuration Template
# Copy this file to .env and customize the values
# Or run 'npm run setup' for interactive configuration

# =============================================================================
# üöÄ QUICK START
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Run setup: npm run setup
# 3. Start app: npm start
# 4. Visit: http://localhost:3000

# =============================================================================
# üñ•Ô∏è  SERVER CONFIGURATION
# =============================================================================

# Environment (development, production)
NODE_ENV=development

# Server binding (0.0.0.0 for Docker, localhost for local dev)
HOST=0.0.0.0

# Server port
PORT=3000

# Base URL for your application (used for OAuth redirects)
BASE_URL=http://localhost:3000

# =============================================================================
# üîê SECURITY & SESSIONS
# =============================================================================

# Session secret (REQUIRED) - Generate with: node -p "require('crypto').randomBytes(64).toString('hex')"
# The setup script will generate this automatically
SESSION_SECRET=your_secure_session_secret_here

# Session timeout in seconds (default: 8 hours)
SESSION_TTL_SECONDS=28800

# User agent string for API requests
USER_AGENT=My-Nodesite/1.0

# =============================================================================
# üîó GITHUB OAUTH (OPTIONAL)
# =============================================================================
# GitHub OAuth enables admin authentication for project management
# 
# Setup instructions:
# 1. Go to: https://github.com/settings/applications/new
# 2. Create OAuth App:
#    - Application name: My-Nodesite
#    - Homepage URL: http://localhost:3000 (or your BASE_URL)
#    - Callback URL: http://localhost:3000/auth/github/callback
# 3. Copy Client ID and Secret below

# GitHub OAuth Application ID
GITHUB_CLIENT_ID=

# GitHub OAuth Application Secret
GITHUB_CLIENT_SECRET=

# Restrict admin access to specific GitHub user (optional)
ADMIN_GITHUB_USER=

# OAuth callback URLs (usually matches BASE_URL + /auth/github/callback)
GITHUB_CALLBACK_URL=http://localhost:3000/auth/github/callback
OAUTH_REDIRECT_URI=http://localhost:3000/auth/github/callback

# =============================================================================
# üóÑÔ∏è  DATABASE CONFIGURATION (OPTIONAL)
# =============================================================================
# Database is optional - app works with file storage if not configured
# 
# For local PostgreSQL:
# POSTGRES_HOST=localhost
# 
# For Docker Compose (default values):
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_DB=my_nodesite
POSTGRES_USER=my_nodesite
POSTGRES_PASSWORD=change_me_to_secure_password

# Complete database connection URL
# Format: postgres://user:password@host:port/database
DATABASE_URL=postgres://my_nodesite:change_me_to_secure_password@db:5432/my_nodesite

# =============================================================================
# üìã CONFIGURATION NOTES
# =============================================================================

# REQUIRED for basic functionality:
# - SESSION_SECRET (for session security)

# OPTIONAL for enhanced features:
# - GitHub OAuth (for admin authentication)
# - PostgreSQL (for persistent database storage)

# The application will:
# ‚úÖ Work without GitHub OAuth (with limited admin features)
# ‚úÖ Work without database (using file-based storage)
# ‚úÖ Auto-generate missing configuration when possible

# =============================================================================
# üê≥ DOCKER DEPLOYMENT
# =============================================================================
# When using Docker Compose, these values are automatically configured:
# - Database connection points to 'db' service
# - Network connectivity between services
# - Volume persistence for database

# For production deployment, consider:
# - Setting NODE_ENV=production
# - Using strong passwords
# - Configuring proper BASE_URL
# - Setting up GitHub OAuth for admin access

# =============================================================================
# üÜò TROUBLESHOOTING
# =============================================================================

# App won't start?
# - Check NODE_ENV and PORT values
# - Ensure SESSION_SECRET is set
# - Verify .env file is in correct location

# GitHub OAuth not working?
# - Check CLIENT_ID and CLIENT_SECRET
# - Verify callback URL matches GitHub app settings
# - Ensure BASE_URL is correct

# Database connection issues?
# - Verify PostgreSQL is running
# - Check connection string format
# - For Docker: ensure 'db' service is up

# Still need help?
# - Check server logs: npm run logs
# - Run setup again: npm run setup
# - View README.md for detailed instructions